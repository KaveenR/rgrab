#!/usr/bin/env python2
# -*- coding: utf-8 -*-

import argparse
import json
import os
import sys
import urllib

def download_image(url,sub,destination):
	name  = url.split('/')[-1]
	nameF = sub+"_"+name

        if destination:
            try:
                os.chdir(destination)
            except:
                print("Can't access directory. Verify path")
                sys.exit
            
            if os.path.isfile(nameF):
                print("Already Downloaded Skipping")
            else:
                urllib.urlretrieve(url, sub + "_" + name)
	        print("100% " + name)
        else:
            if os.path.isfile(nameF):
                print("Already Downloaded Skipping")
            else:
                urllib.urlretrieve(url, sub + "_" + name)
                print("100% " + name)

def download(name,contin,destination):
    try:
        website = urllib.urlopen("http://www.reddit.com/r/"+name+"/.json?count="+str(contin))
    	jsonb = json.loads(website.read())
    except:
        print("Data retrieval failed")
        sys.exit()

    links = []
    
    try:
        for i in jsonb['data']['children']:
           links.append(i['data']['url'])
    except:
        print("Reddit connection error")
        sys.exit()

    for i in links:
        if i[(len(i)-4):(len(i))].upper() in ['.JPG','.PNG','.GIF']:
	    download_image(i,name,destination)

def initParser():
    parser = argparse.ArgumentParser(description="Simple Reddit image downloader")

    parser.add_argument('-n','--name', action='store', dest='subreddit',
                        help='sub-reddit name', required=True)
    parser.add_argument('-d', action='store', dest='destination',
                        help='Download destination path', required=False)
    parser.add_argument('-c','--continue', action='store', dest='count',
                        help='continue count', required=False, default= 0)
    results = parser.parse_args()
    download(results.subreddit,results.count,results.destination)

if __name__ == "__main__":
    initParser()
